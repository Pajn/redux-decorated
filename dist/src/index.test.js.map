{"version":3,"sources":["src/index.test.js"],"names":["mock_functions_1","require","index_1","describe","it","actions","createActions","create","save","meta","toString","expect","toEqual","type","prefix","reducer","createReducer","when","s","a","handler1","createMockFunction","returns","handler2","calls","length","handler","payload","args","stateMapper","_","old","deeply","nested","property","result","removeIn","toBe","not","toBeDefined"],"mappings":"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","file":"index.test.js","sourcesContent":["\"use strict\";\n/// <reference types=\"jest\" />\nconst mock_functions_1 = require(\"mock-functions\");\nconst index_1 = require(\"./index\");\ndescribe('createActions', () => {\n    it('should return an instance with type set on every action', () => {\n        const actions = index_1.createActions({\n            create: {},\n            save: {\n                meta: {\n                    toString: true,\n                }\n            },\n        });\n        expect(actions.create).toEqual({ type: 'create' });\n        expect(actions.save).toEqual({ type: 'save', meta: { toString: true } });\n    });\n    it('should keep properties set on the actions', () => {\n        const actions = index_1.createActions({\n            create: { type: 'new' },\n        });\n        expect(actions.create).toEqual({ type: 'new' });\n    });\n    it('should support setting a prefx', () => {\n        const actions = index_1.createActions({\n            create: {},\n        }, { prefix: 'test' });\n        expect(actions.create).toEqual({ type: 'testcreate' });\n    });\n});\ndescribe('createReducer', () => {\n    it('should return a chainable builder', () => {\n        const reducer = index_1.createReducer([]);\n        expect(reducer.when({ type: 'type' }, (s, a) => s)).toEqual(reducer);\n    });\n    it('should call the correct handler when an action is fired', () => {\n        const handler1 = mock_functions_1.createMockFunction().returns('1');\n        const handler2 = mock_functions_1.createMockFunction().returns('2');\n        const reducer = index_1.createReducer([])\n            .when({ type: '1' }, handler1)\n            .when({ type: '2' }, handler2);\n        expect(reducer([], { type: '1' })).toEqual('1');\n        expect(handler1.calls.length).toEqual(1);\n        expect(handler2.calls.length).toEqual(0);\n    });\n    it('should return the initial state if no action matches', () => {\n        const handler1 = mock_functions_1.createMockFunction().returns('1');\n        const handler2 = mock_functions_1.createMockFunction().returns('2');\n        const reducer = index_1.createReducer('0')\n            .when({ type: '1' }, handler1)\n            .when({ type: '2' }, handler2);\n        expect(reducer('', { type: '3' })).toEqual('0');\n        expect(handler1.calls.length).toEqual(0);\n        expect(handler2.calls.length).toEqual(0);\n    });\n    it('should return the current state if no action matches', () => {\n        const handler1 = mock_functions_1.createMockFunction().returns('1');\n        const handler2 = mock_functions_1.createMockFunction().returns('2');\n        const reducer = index_1.createReducer('0')\n            .when({ type: '1' }, handler1)\n            .when({ type: '2' }, handler2);\n        expect(reducer('3', { type: '0' })).toEqual('3');\n        expect(handler1.calls.length).toEqual(0);\n        expect(handler2.calls.length).toEqual(0);\n    });\n    it('should pass the payload and state to the handler', () => {\n        const handler = mock_functions_1.createMockFunction();\n        const reducer = index_1.createReducer('0')\n            .when({ type: '1' }, handler);\n        reducer('2', { type: '1', payload: '3' });\n        expect(handler.calls.length).toEqual(1);\n        expect(handler.calls[0].args).toEqual(['2', '3']);\n    });\n    describe('handlers returning a function to modify state', () => {\n        it('should pass the payload and state to the handler', () => {\n            const stateMapper = mock_functions_1.createMockFunction();\n            const handler = mock_functions_1.createMockFunction().returns(stateMapper);\n            const reducer = index_1.createReducer('0')\n                .when({ type: '1' }, (_, payload) => handler(payload));\n            reducer('2', { type: '1', payload: '3' });\n            expect(handler.calls.length).toEqual(1);\n            expect(stateMapper.calls.length).toEqual(1);\n            expect(handler.calls[0].args).toEqual(['3']);\n            expect(stateMapper.calls[0].args).toEqual(['2']);\n        });\n        it('should return the value returned by the handler', () => {\n            const reducer = index_1.createReducer('0')\n                .when({ type: '1' }, _ => _ => '3');\n            expect(reducer('2', { type: '1' })).toEqual('3');\n        });\n    });\n});\ndescribe('removeIn', () => {\n    it('should be able to remove a deep preoperty', () => {\n        const old = { deeply: { nested: { property: true } } };\n        const result = index_1.removeIn(['deeply', 'nested', 'property'], old);\n        expect(old.deeply.nested.property).toBe(true);\n        expect(result.deeply.nested.property).not.toBeDefined();\n    });\n    it('should be able to remove an intem in an array', () => {\n        const old = [1, 2, 3];\n        const result = index_1.removeIn(1, old);\n        expect(old).toEqual([1, 2, 3]);\n        expect(result).toEqual([1, 3]);\n    });\n});\n"]}